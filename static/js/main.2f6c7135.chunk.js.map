{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","cls","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f6c7135.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link, Switch } from 'react-router-dom'//\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (   \r\n\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n       <div className=\"container-fluid\">\r\n       <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n       <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n       <span className=\"navbar-toggler-icon\"></span>\r\n       </button>\r\n       <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n           {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/*<li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/about\">About</Link>\r\n    </li> */}\r\n        </ul>\r\n        {/*<div className=\"d-flex\">\r\n          <div className= \"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width:'30px', cursor: 'pointer'}}></div>\r\n          <div className= \"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n          <div className= \"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n          <div className= \"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n    </div>*/}\r\n        <div className={`form-check form-switch text-${props.mode === 'light'? 'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick= {()=>{props.toggleMode(null)}} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  \r\n\r\n\r\n    )\r\n};\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired, \r\n    aboutText: PropTypes.string\r\n} \r\nNavbar.defaultProps = { \r\n    title : \"Set title here\",\r\n    aboutText: \"About text here\"\r\n    };\r\n    ","import React , {useState} from 'react'\r\n\r\nexport default function TextForm(props){\r\n    const handleUpClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\" + text );//\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n       // console.log(\"Uppercase was clicked\" + text );//\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\" , \"success\");\r\n    }\r\n    const handleonChange=(event)=>{\r\n        console.log(\"on Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces are removed!\",\"success\");\r\n        }\r\n    const handleCopy = () => {\r\n            var text = document.getElementById(\"myBox\");\r\n            text.select();\r\n            navigator.clipboard.writeText(text.value);\r\n            props.showAlert(\"Text has been copied!\", \"success\");\r\n    }\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text has been deleted!\", \"success\");\r\n    }    \r\n    const[text, setText] = useState('');\r\n    return (\r\n    <>\r\n    <div className =\"container\" style ={{color: props.mode=== 'dark'? 'white':'#13062d'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange = {handleonChange} style={{backgroundColor: props.mode=== 'dark'?'grey':'white' , color: props.mode=== 'dark'? 'white':'#13062d'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className = \"btn btn-primary mx-1\" onClick = {handleUpClick}>Convert to Uppercase</button>\r\n        <button className = \"btn btn-primary mx-1\" onClick = {handleLoClick}>Convert to Lowercase</button>\r\n        <button className = \"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n        <button className = \"btn btn-primary mx-1\" onClick={handleCopy}> Copy Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n\r\n\r\n\r\n    </div>\r\n    <div className = \"container my-3\" style={{color: props.mode=== 'dark'?'white':'#13062d'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show` }role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n//import About from './component/About';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\n//import {\n//  BrowserRouter as Router,\n//  Switch,\n//  Route\n//} from \"react-router-dom\";\n\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert= (message, type)=>{\n    setAlert({\n    msg: message,\n    type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n   }\n   const removeBodyClasses = ()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-success')\n    }\n    \n  const toggleMode =(cls)=>{\n    removeBodyClasses();\n    console.log(cls);\n    document.body.classList.add('bg-' + cls);\n    if(mode=='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#13062d';\n      showAlert(\"Dark mode has been enabled\" , \"success\");\n      document.title = 'Textutils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\" , \"success\");\n      document.title = 'Textutils - Light Mode';\n    }\n  }\n  return (\n  <>\n  {/*<Router>*/}\n  <Navbar title = \"TextUtils\" mode = {mode} toggleMode ={toggleMode} />\n  <Alert alert = {alert}/>\n  <div className=\"container my-3\">\n  {/*<Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n  <Route path=\"/\">*/}\n            <TextForm showAlert= {showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/*</Route>\n  </Switch>*/}\n  </div>\n  {/*</Router>*/}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}